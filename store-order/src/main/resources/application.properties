spring.config.import=optional:configserver:http://localhost:8104
spring.application.name=STORE-ORDER
server.port=8102
server.servlet.context-path=/store-order

eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICE_URL}

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
flyway.locations=filesystem:db/migration
#spring.jpa.show-sql=true

springdoc.version=v1.0.0

management.endpoints.web.exposure.include=health,circuitbreakerevents,retryevents
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

resilience4j.circuitbreaker.circuitBreakerAspectOrder=1
resilience4j.circuitbreaker.instances.store-product-catalog.failureRateThreshold=50
resilience4j.circuitbreaker.instances.store-product-catalog.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.store-product-catalog.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.store-product-catalog.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.store-product-catalog.slidingWindowSize=2
resilience4j.circuitbreaker.instances.store-product-catalog.minimumNumberOfCalls=1
resilience4j.circuitbreaker.instances.store-product-catalog.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.store-product-catalog.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.store-product-catalog.permittedNumberOfCallsInHalfOpenState=3

resilience4j.retry.retryAspectOrder=2
resilience4j.retry.instances.store-product-catalog.maxAttempts=3
resilience4j.retry.instances.store-product-catalog.waitDuration=10s
resilience4j.retry.instances.store-product-catalog.eventConsumerBufferSize=10

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_ENDPOINT}

spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_BOOTSTRAP_SERVERS}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all